{
	"id": "b5a5c2dc-12cc-01a6-01f8-bf0b4c5e81ab",
	"name": "TestsPostman",
	"allTests": [],
	"timestamp": 1588250884224,
	"collection_id": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
	"folder_id": 0,
	"target_type": "collection",
	"environment_id": "0",
	"data": null,
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
		"name": "TestsPostman",
		"description": "Collection des tests de l'application MicroCommerce",
		"order": [
			"66d88fe5-1c0b-c6ef-8b54-92fe02246371",
			"9e4d0987-78ba-83db-ca37-f374e558f5cc",
			"1511a509-8e8d-fd80-d6bf-7819c88b990b",
			"563c1f9d-01f6-1ba1-5244-aec0ea29231a",
			"6fbca85a-d152-10d2-ab3e-f7ef24acc7f8",
			"1e910e09-fbbd-94ef-5929-5239478ff59b",
			"25a0be74-c553-548e-ebd1-e3e3fc245b58",
			"8bca02dc-46f4-1f58-085f-614db8aececa"
		],
		"folders": [],
		"folders_order": [],
		"requests": [
			{
				"id": "1511a509-8e8d-fd80-d6bf-7819c88b990b",
				"headers": "",
				"headerData": [],
				"url": "localhost:9090/Produits",
				"queryParams": [],
				"pathVariables": {},
				"pathVariableData": [],
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"data": null,
				"dataMode": "params",
				"name": "localhost:9090/Produits",
				"description": "",
				"descriptionFormat": "html",
				"time": 1588249794795,
				"version": 2,
				"responses": [],
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "1e910e09-fbbd-94ef-5929-5239478ff59b",
				"headers": "",
				"headerData": [],
				"url": "http://localhost:9090/Produits/AdminProduits",
				"queryParams": [],
				"pathVariables": {},
				"pathVariableData": [],
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"data": null,
				"dataMode": "params",
				"name": "http://localhost:9090/Produits/AdminProduits - Marge",
				"description": "",
				"descriptionFormat": "html",
				"time": 1588250104447,
				"version": 2,
				"responses": [],
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "25a0be74-c553-548e-ebd1-e3e3fc245b58",
				"headers": "",
				"headerData": [],
				"url": "localhost:9090/Produits/Trier",
				"queryParams": [],
				"pathVariables": {},
				"pathVariableData": [],
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"data": null,
				"dataMode": "params",
				"name": "localhost:9090/Produits/Trier - Alphabetique",
				"description": "",
				"descriptionFormat": "html",
				"time": 1588250203243,
				"version": 2,
				"responses": [],
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "563c1f9d-01f6-1ba1-5244-aec0ea29231a",
				"headers": "",
				"headerData": [],
				"url": "localhost:9090/Produits/14",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "DELETE",
				"data": null,
				"dataMode": "params",
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1588250876662,
				"name": "localhost:9090/Produits/4",
				"description": "",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"responses": []
			},
			{
				"id": "66d88fe5-1c0b-c6ef-8b54-92fe02246371",
				"headers": "Content-Type: application/json\n",
				"headerData": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					}
				],
				"url": "localhost:9090/Produits",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "POST",
				"data": "{\n\t\"nom\":\"pigeon\",\n\t\"prix\":0,\n\t\"prixAchat\": 2\n}",
				"dataMode": "raw",
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1588249773598,
				"name": "localhost:9090/Produits",
				"description": "",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"responses": []
			},
			{
				"id": "6fbca85a-d152-10d2-ab3e-f7ef24acc7f8",
				"headers": "Content-Type: application/json\n",
				"headerData": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					}
				],
				"url": "localhost:9090/Produits",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "PUT",
				"data": "{\n    \"id\": 2,\n    \"nom\": \"Aspirateur Toto!\",\n    \"prix\": 500,\n    \"prixAchat\": 200\n}",
				"dataMode": "raw",
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1588250863005,
				"name": "localhost:9090/Produits",
				"description": "",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"responses": []
			},
			{
				"id": "8bca02dc-46f4-1f58-085f-614db8aececa",
				"headers": "",
				"headerData": [],
				"url": "localhost:9090/Produits/12",
				"queryParams": [],
				"pathVariables": {},
				"pathVariableData": [],
				"preRequestScript": null,
				"method": "GET",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"data": null,
				"dataMode": "params",
				"name": "localhost:9090/Produits/12",
				"description": "",
				"descriptionFormat": "html",
				"time": 1588250241702,
				"version": 2,
				"responses": [],
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {}
			},
			{
				"id": "9e4d0987-78ba-83db-ca37-f374e558f5cc",
				"headers": "Content-Type: application/json\n",
				"headerData": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": "",
						"enabled": true
					}
				],
				"url": "localhost:9090/Produits",
				"queryParams": [],
				"preRequestScript": null,
				"pathVariables": {},
				"pathVariableData": [],
				"method": "POST",
				"data": "{\n\t\"nom\":\"pigeon\",\n\t\"prix\":500,\n\t\"prixAchat\": 2\n}",
				"dataMode": "raw",
				"tests": null,
				"currentHelper": "normal",
				"helperAttributes": {},
				"time": 1588249779499,
				"name": "localhost:9090/Produits OK",
				"description": "",
				"collectionId": "2c927b92-ccb3-85b2-dd72-f69b0bef7921",
				"responses": []
			}
		],
		"timestamp": 1588249565340,
		"synced": false,
		"syncedFilename": "",
		"remote_id": 0,
		"remoteLink": "",
		"remoteLinkUpdatedAt": null,
		"public": false,
		"owner": "3373017",
		"subscribed": false,
		"createdAt": 1588249565340,
		"updatedAt": 1588250241739,
		"write": true,
		"published": false,
		"favorite": true,
		"permissions": {},
		"syncedPermissions": {},
		"sharedWithTeam": false
	},
	"folder": null,
	"environment": null,
	"globals": [],
	"results": [
		{
			"id": "66d88fe5-1c0b-c6ef-8b54-92fe02246371",
			"name": "localhost:9090/Produits",
			"url": "localhost:9090/Produits",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				10
			],
			"allTests": [
				{}
			],
			"time": 10,
			"totalRequestTime": 10,
			"iterationResults": {}
		},
		{
			"id": "9e4d0987-78ba-83db-ca37-f374e558f5cc",
			"name": "localhost:9090/Produits OK",
			"url": "localhost:9090/Produits",
			"totalTime": 0,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": "The request has been fulfilled and resulted in a new resource being created."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				9
			],
			"allTests": [
				{}
			],
			"time": 9,
			"totalRequestTime": 9,
			"iterationResults": {}
		},
		{
			"id": "1511a509-8e8d-fd80-d6bf-7819c88b990b",
			"name": "localhost:9090/Produits",
			"url": "localhost:9090/Produits",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				9
			],
			"allTests": [
				{}
			],
			"time": 9,
			"totalRequestTime": 9,
			"iterationResults": {}
		},
		{
			"id": "563c1f9d-01f6-1ba1-5244-aec0ea29231a",
			"name": "localhost:9090/Produits/4",
			"url": "localhost:9090/Produits/14",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				9
			],
			"allTests": [
				{}
			],
			"time": 9,
			"totalRequestTime": 9,
			"iterationResults": {}
		},
		{
			"id": "6fbca85a-d152-10d2-ab3e-f7ef24acc7f8",
			"name": "localhost:9090/Produits",
			"url": "localhost:9090/Produits",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				9
			],
			"allTests": [
				{}
			],
			"time": 9,
			"totalRequestTime": 9,
			"iterationResults": {}
		},
		{
			"id": "1e910e09-fbbd-94ef-5929-5239478ff59b",
			"name": "http://localhost:9090/Produits/AdminProduits - Marge",
			"url": "http://localhost:9090/Produits/AdminProduits",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				7
			],
			"allTests": [
				{}
			],
			"time": 7,
			"totalRequestTime": 7,
			"iterationResults": {}
		},
		{
			"id": "25a0be74-c553-548e-ebd1-e3e3fc245b58",
			"name": "localhost:9090/Produits/Trier - Alphabetique",
			"url": "localhost:9090/Produits/Trier",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				7
			],
			"allTests": [
				{}
			],
			"time": 7,
			"totalRequestTime": 7,
			"iterationResults": {}
		},
		{
			"id": "8bca02dc-46f4-1f58-085f-614db8aececa",
			"name": "localhost:9090/Produits/12",
			"url": "localhost:9090/Produits/12",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				9
			],
			"allTests": [
				{}
			],
			"time": 9,
			"totalRequestTime": 9,
			"iterationResults": {}
		}
	],
	"totalPass": 0,
	"totalFail": 0,
	"totalTime": 69,
	"lifecycle": "idle",
	"willStop": false,
	"requests": [
		{
			"name": "localhost:9090/Produits",
			"id": "66d88fe5-1c0b-c6ef-8b54-92fe02246371",
			"url": "localhost:9090/Produits",
			"time": 10,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": "The request cannot be fulfilled due to bad syntax."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "localhost:9090/Produits OK",
			"id": "9e4d0987-78ba-83db-ca37-f374e558f5cc",
			"url": "localhost:9090/Produits",
			"time": 9,
			"responseCode": {
				"code": 201,
				"name": "Created",
				"detail": "The request has been fulfilled and resulted in a new resource being created."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "localhost:9090/Produits",
			"id": "1511a509-8e8d-fd80-d6bf-7819c88b990b",
			"url": "localhost:9090/Produits",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "localhost:9090/Produits/4",
			"id": "563c1f9d-01f6-1ba1-5244-aec0ea29231a",
			"url": "localhost:9090/Produits/14",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "localhost:9090/Produits",
			"id": "6fbca85a-d152-10d2-ab3e-f7ef24acc7f8",
			"url": "localhost:9090/Produits",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "http://localhost:9090/Produits/AdminProduits - Marge",
			"id": "1e910e09-fbbd-94ef-5929-5239478ff59b",
			"url": "http://localhost:9090/Produits/AdminProduits",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "localhost:9090/Produits/Trier - Alphabetique",
			"id": "25a0be74-c553-548e-ebd1-e3e3fc245b58",
			"url": "localhost:9090/Produits/Trier",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		},
		{
			"name": "localhost:9090/Produits/12",
			"id": "8bca02dc-46f4-1f58-085f-614db8aececa",
			"url": "localhost:9090/Produits/12",
			"time": 9,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
			},
			"testPassFailCounts": {},
			"gridTitles": [],
			"gridData": [
				[]
			],
			"tests": {}
		}
	],
	"synced": false
}